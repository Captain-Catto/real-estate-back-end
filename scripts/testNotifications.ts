import mongoose from "mongoose";
import { NotificationService } from "../src/services/NotificationService";

async function testNotifications() {
  try {
    // Connect to MongoDB
    await mongoose.connect(
      process.env.MONGODB_URI || "mongodb://localhost:27017/real-estate"
    );
    console.log("‚úÖ Connected to MongoDB");

    // Test user ID (replace with actual user ID from your database)
    const testUserId = "60a5f1c5e1b5d5d5d5d5d5d5"; // Example ObjectId

    console.log("\nüß™ Testing Notifications...\n");

    // 1. Test Top-up Success Notification
    console.log("1. Testing Top-up Success Notification...");
    await NotificationService.createTopUpSuccessNotification(
      testUserId,
      500000,
      "ORDER_" + Date.now()
    );
    console.log("‚úÖ Top-up notification sent\n");

    // 2. Test Package Purchase Notification
    console.log("2. Testing Package Purchase Notification...");
    await NotificationService.createPackagePurchaseNotification(
      testUserId,
      "G√≥i VIP 30 ng√†y",
      300000,
      "ORDER_" + Date.now(),
      30
    );
    console.log("‚úÖ Package purchase notification sent\n");

    // 3. Test Post Approved Notification
    console.log("3. Testing Post Approved Notification...");
    await NotificationService.createPostApprovedNotification(
      testUserId,
      "B√°n cƒÉn h·ªô chung c∆∞ Vinhomes Central Park",
      "60a5f1c5e1b5d5d5d5d5d5d6"
    );
    console.log("‚úÖ Post approved notification sent\n");

    // 4. Test Post Rejected Notification
    console.log("4. Testing Post Rejected Notification...");
    await NotificationService.createPostRejectedNotification(
      testUserId,
      "Cho thu√™ nh√† nguy√™n cƒÉn Q1",
      "60a5f1c5e1b5d5d5d5d5d5d7",
      "Thi·∫øu th√¥ng tin gi√° v√† h√¨nh ·∫£nh"
    );
    console.log("‚úÖ Post rejected notification sent\n");

    // 5. Test Interest Notification
    console.log("5. Testing Interest Notification...");
    await NotificationService.createInterestNotification(
      testUserId,
      "B√°n bi·ªát th·ª± Th·∫£o ƒêi·ªÅn",
      "60a5f1c5e1b5d5d5d5d5d5d8",
      "Nguy·ªÖn VƒÉn A"
    );
    console.log("‚úÖ Interest notification sent\n");

    // 6. Test System Notification
    console.log("6. Testing System Notification...");
    await NotificationService.createSystemNotification(
      testUserId,
      "üéâ Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi h·ªá th·ªëng",
      "Ch√∫c m·ª´ng b·∫°n ƒë√£ ƒëƒÉng k√Ω th√†nh c√¥ng! H√£y kh√°m ph√° c√°c t√≠nh nƒÉng tuy·ªát v·ªùi c·ªßa ch√∫ng t√¥i.",
      {
        actionButton: {
          text: "B·∫Øt ƒë·∫ßu kh√°m ph√°",
          link: "/nguoi-dung/dashboard",
          style: "primary",
        },
      }
    );
    console.log("‚úÖ System notification sent\n");

    console.log("üéâ All test notifications have been sent successfully!");
    console.log("\nüìã Action Button Examples:");
    console.log("- Top-up: 'Xem v√≠' -> /tai-khoan/vi-tien (style: primary)");
    console.log(
      "- Package: 'ƒêƒÉng tin ngay' -> /nguoi-dung/dang-tin (style: success)"
    );
    console.log(
      "- Approved: 'Xem tin ƒëƒÉng' -> /tin-dang/{postId} (style: primary)"
    );
    console.log(
      "- Rejected: 'Ch·ªânh s·ª≠a tin' -> /nguoi-dung/tin-dang/chinh-sua/{postId} (style: warning)"
    );
    console.log(
      "- Interest: 'Xem tin ƒëƒÉng' -> /tin-dang/{postId} (style: info)"
    );
    console.log(
      "- System: 'B·∫Øt ƒë·∫ßu kh√°m ph√°' -> /nguoi-dung/dashboard (style: primary)"
    );
  } catch (error) {
    console.error("‚ùå Error testing notifications:", error);
  } finally {
    await mongoose.disconnect();
    console.log("\n‚úÖ Disconnected from MongoDB");
  }
}

// Run the test
testNotifications();
